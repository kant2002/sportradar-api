// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace AndriiKurdiumov.SportRadar.Client
{
    using Microsoft.Rest;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// </summary>
    public partial interface ISportRadarSoccerAPI : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }


        /// <summary>
        /// Get daily results
        /// </summary>
        /// <param name='accessLevel'>
        /// Possible values include: 'x', 't'
        /// </param>
        /// <param name='leagueGroup'>
        /// Possible values include: 'eu', 'intl', 'am', 'as', 'global',
        /// 'other'
        /// </param>
        /// <param name='languageCode'>
        /// </param>
        /// <param name='date'>
        /// The calendar year
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<DailyResults>> GetDailyResultsWithHttpMessagesAsync(string accessLevel, string leagueGroup, string languageCode, System.DateTime date, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get matches on the specific day
        /// </summary>
        /// <param name='accessLevel'>
        /// Possible values include: 'x', 't'
        /// </param>
        /// <param name='leagueGroup'>
        /// Possible values include: 'eu', 'intl', 'am', 'as', 'global',
        /// 'other'
        /// </param>
        /// <param name='languageCode'>
        /// </param>
        /// <param name='date'>
        /// The calendar year
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Schedule>> GetDailyScheduleWithHttpMessagesAsync(string accessLevel, string leagueGroup, string languageCode, System.DateTime date, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get live results
        /// </summary>
        /// <param name='accessLevel'>
        /// Possible values include: 'x', 't'
        /// </param>
        /// <param name='leagueGroup'>
        /// Possible values include: 'eu', 'intl', 'am', 'as', 'global',
        /// 'other'
        /// </param>
        /// <param name='languageCode'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<LiveResult>> GetLiveResultsWithHttpMessagesAsync(string accessLevel, string leagueGroup, string languageCode, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
